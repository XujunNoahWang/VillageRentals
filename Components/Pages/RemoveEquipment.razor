@page "/remove-equipment"
@using VillageRentals.CSFiles
@inject JsonService JsonService
@inject NavigationManager NavigationManager

<h3>Remove Equipment</h3>

<div class="form-group">
    <label>Equipment:</label>
    <select class="form-control" @bind="SelectedEquipmentID" @bind:after="OnEquipmentChanged">
        <option value="0">Select an equipment...</option>
        @foreach (var equipment in AvailableEquipments)
        {
                <option value="@equipment.EquipmentID">@equipment.EquipmentID @equipment.EquipmentName</option>
        }
    </select>
</div>
<div class="form-group">
    <label>Equipment Description:</label>
    <textarea class="form-control" value="@(SelectedEquipment?.EquipmentDescription ?? "")" readonly rows="3"></textarea>
</div>
<div class="form-group">
    <label>Equipment Daily Rate:</label>
    <input type="text" class="form-control" value="@(SelectedEquipment != null ? $"{SelectedEquipment.EquipmentDailyRate} UCD/Day" : "")" readonly />
</div>
<div class="form-group">
    <label>Equipment Condition:</label>
    <input type="text" class="form-control" value="@(SelectedEquipment?.EquipmentCondition ?? "")" readonly />
</div>
<div class="form-group">
    <label>Equipment is in Inventory:</label>
    <select class="form-control" value="@(SelectedEquipment != null && SelectedEquipment.EquipmentIsInInventory ? "Y" : "N")" disabled>
        <option value="Y">Y</option>
        <option value="N">N</option>
    </select>
</div>
<div class="form-group">
    <label>Equipment is Available:</label>
    <select class="form-control" value="@(SelectedEquipment != null && SelectedEquipment.EquipmentIsAvailable ? "Y" : "N")" disabled>
        <option value="Y">Y</option>
        <option value="N">N</option>
    </select>
</div>
<div class="form-group">
    <label>Equipment Working Parts:</label>
    <textarea class="form-control" value="@(SelectedEquipment?.EquipmentWorkingParts ?? "")" readonly rows="3"></textarea>
</div>
<div class="button-group">
    <button class="btn btn-primary" @onclick="RemoveSelectedEquipment">Remove</button>
    <button class="btn btn-danger" @onclick="Cancel">Cancel</button>
</div>

@if (!string.IsNullOrEmpty(Message))
{
        <p class="@MessageClass">@Message</p>
}

@code {
    private List<Equipment> AvailableEquipments = new List<Equipment>();
    private int SelectedEquipmentID { get; set; }
    private Equipment SelectedEquipment { get; set; }
    private string Message = string.Empty;
    private string MessageClass = string.Empty;

    protected override void OnInitialized()
    {
        // Load available equipments (in inventory and available)
        AvailableEquipments = DataStore.Equipments
            .Where(e => e.EquipmentIsInInventory && e.EquipmentIsAvailable)
            .ToList();
    }

    private void OnEquipmentChanged()
    {
        if (SelectedEquipmentID != 0)
        {
            SelectedEquipment = DataStore.Equipments.FirstOrDefault(e => e.EquipmentID == SelectedEquipmentID);
        }
        else
        {
            SelectedEquipment = null;
        }
    }

    private void RemoveSelectedEquipment()
    {
        if (SelectedEquipmentID == 0)
        {
            Message = "Please select an equipment to remove.";
            MessageClass = "error-message";
            return;
        }

        // Remove the equipment
        JsonService.RemoveEquipment(SelectedEquipmentID);

        // Refresh the available equipments list
        AvailableEquipments = DataStore.Equipments
            .Where(e => e.EquipmentIsInInventory && e.EquipmentIsAvailable)
            .ToList();

        // Clear the selection
        SelectedEquipmentID = 0;
        SelectedEquipment = null;

        // Show success message
        Message = "Equipment removed successfully!";
        MessageClass = "success-message";
    }

    private void Cancel()
    {
        // Clear the selection
        SelectedEquipmentID = 0;
        SelectedEquipment = null;
        Message = string.Empty;
    }
}

<style>
    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 300px;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .button-group {
        display: flex;
        gap: 1rem;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    .success-message {
        color: green;
        margin-top: 1rem;
    }

    .error-message {
        color: red;
        margin-top: 1rem;
    }
</style>