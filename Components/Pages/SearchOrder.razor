@page "/search-order"
@inject JsonService JsonService
@inject NavigationManager NavigationManager
@using VillageRentals.CSFiles

<h3>Search for Order</h3>

<div class="form-group">
    <label>Order ID:</label>
    @if (AllOrders.Any())
    {
        <select class="form-control" @bind="SelectedOrderID" @bind:after="OnOrderChanged">
            <option value="0">Select an order...</option>
            @foreach (var order in AllOrders)
            {
                <option value="@order.OrderID">@order.OrderID</option>
            }
        </select>
    }
    else
    {
        <p class="error-message">No orders found.</p>
    }
</div>
<div class="form-group">
    <label>Status:</label>
    <input type="text" class="form-control @StatusClass" value="@(SelectedOrder != null ? (SelectedOrder.OrderIsClosed ? "Closed" : "Active") : "")" readonly />
</div>
<div class="form-group">
    <label>Equipment:</label>
    <input type="text" class="form-control" value="@(SelectedEquipment != null ? $"{SelectedEquipment.EquipmentID} {SelectedEquipment.EquipmentName}" : "")" readonly />
</div>
<div class="form-group">
    <label>Equipment Daily Rate:</label>
    <input type="text" class="form-control" value="@(SelectedEquipment != null ? $"{SelectedEquipment.EquipmentDailyRate} UCD/Day" : "")" readonly />
</div>
<div class="form-group">
    <label>Order Place Date:</label>
    <input type="text" class="form-control" value="@(SelectedOrder != null ? SelectedOrder.OrderPlaceDate.ToString("yyyy-MM-dd") : "")" readonly />
</div>
<div class="form-group">
    <label>Order Rental Date:</label>
    <input type="text" class="form-control" value="@(SelectedOrder != null ? SelectedOrder.OrderRentalDate.ToString("yyyy-MM-dd") : "")" readonly />
</div>
<div class="form-group">
    <label>Order Return Date (Planned):</label>
    <input type="text" class="form-control" value="@(SelectedOrder != null ? SelectedOrder.OrderReturnDate.ToString("yyyy-MM-dd") : "")" readonly />
</div>
<div class="form-group">
    <label>Order Return Date (Final):</label>
    <input type="text" class="form-control" value="@(SelectedOrder != null && SelectedOrder.OrderReturnDateFinal.HasValue ? SelectedOrder.OrderReturnDateFinal.Value.ToString("yyyy-MM-dd") : "")" readonly />
</div>
<div class="form-group">
    <label>Customer Discount:</label>
    <input type="text" class="form-control" value="@(CustomerDiscount != null ? $"{CustomerDiscount}%" : "")" readonly />
</div>
<div class="form-group">
    <label>Total Fee:</label>
    <input type="text" class="form-control" value="@(SelectedOrder != null ? $"{SelectedOrder.TotalFee:F2} UCD" : "")" readonly />
</div>

@code {
    private List<Order> AllOrders = new List<Order>();
    private int SelectedOrderID { get; set; }
    private Order SelectedOrder { get; set; }
    private Equipment SelectedEquipment { get; set; }
    private int? CustomerDiscount { get; set; }

    // 动态类名，用于设置 Status 字段的字体颜色
    private string StatusClass => SelectedOrder != null ? (SelectedOrder.OrderIsClosed ? "status-closed" : "status-active") : "";

    protected override void OnInitialized()
    {
        // Load all orders
        AllOrders = DataStore.Orders;
    }

    private void OnOrderChanged()
    {
        if (SelectedOrderID != 0)
        {
            SelectedOrder = DataStore.Orders.FirstOrDefault(o => o.OrderID == SelectedOrderID);
            if (SelectedOrder != null)
            {
                SelectedEquipment = DataStore.Equipments.FirstOrDefault(e => e.EquipmentID == SelectedOrder.EquipmentID);
                var customer = DataStore.Customers.FirstOrDefault(c => c.CustomerID == SelectedOrder.CustomerID);
                CustomerDiscount = customer?.CustomerDiscount;
            }
        }
        else
        {
            SelectedOrder = null;
            SelectedEquipment = null;
            CustomerDiscount = null;
        }
    }
}

<style>
    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 300px;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .error-message {
        color: red;
        margin-top: 1rem;
    }

    .status-active {
        color: green;
    }

    .status-closed {
        color: red;
    }
</style>