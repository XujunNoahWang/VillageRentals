@using VillageRentals.CSFiles

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <span class="navbar-brand" >Village Rentals</span>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (!AuthState.IsLoggedIn)
        {
            <!-- Before login -->
            <div class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    Login Options
                </NavLink>
            </div>
        }
        else if (AuthState.Role == "Admin")
        {
            <!-- Admin menu -->
            <!-- Equipment Management -->
            <div class="nav-item">
                <span class="nav-title">Equipment Management</span>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="add-equipment-category">Add Equipment Category</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="update-equipment-category">Update Equipment Category</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="add-equipment">Add Equipment</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="update-equipment">Update Equipment</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="remove-equipment">Remove Equipment</NavLink>
            </div>            
            <div class="sub-item">
                <NavLink class="nav-link" href="search-equipment">Search for Equipment</NavLink>
            </div>

            <!-- Customer Management -->
            <div class="nav-item">
                <span class="nav-title">Customer Management</span>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="add-customer">Add Customer</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="update-customer">Update Customer</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="remove-customer">Remove Customer</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="search-customer">Search for Customer</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="ban-customer">Ban Customer</NavLink>
            </div>

            <!-- Order Management -->
            <div class="nav-item">
                <span class="nav-title">Order Management</span>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="close-order">Close Order</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="search-order">Search for Order</NavLink>
            </div>

            <!-- Report Management -->
            <div class="nav-item">
                <span class="nav-title">Report Management</span>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="report-by-date">Report by Date</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="report-by-customer">Report by Customer</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="report-by-category">Report by Category</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="customize-report">Customize Report</NavLink>
            </div>
        }
        else if (AuthState.Role == "Customer")
        {
            <!-- Customer menu -->
            <div class="nav-item">
                <span class="nav-title">Order Management</span>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="new-order">New Order</NavLink>
            </div>
            <div class="sub-item">
                <NavLink class="nav-link" href="my-order">My Order</NavLink>
            </div>
        }

        <!-- Logout button for all logged-in users -->
        @if (AuthState.IsLoggedIn)
        {
            <div class="nav-item logout-item">
                <button class="logout-btn" @onclick="Logout">Logout</button>
            </div>
        }
    </nav>
</div>

<style>
    .navbar {
        color: white;
    }

    .nav-scrollable {
        color: white;
        height: 100vh;
        width: 250px;
        overflow-x: hidden;
    }

    .nav-item {
        padding-top: 1.5rem;
        padding-left: 1rem;
    }

    .nav-title {
        color: white;
        font-size: 16px;
    }

    .nav-link {
        color: white !important;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        text-decoration: none;
        background: none !important;
        border: none !important;
        padding: 0;
        line-height: 1;
        margin: 0;
    }

        .nav-link:hover {
            text-decoration: underline;
        }

        .nav-link.active {
            font-weight: bold;
        }

    .navbar-brand {
        color: white !important;
    }

    .sub-item .nav-link {
        padding-left: 2rem;
        line-height: 24px;
    }

    .logout-item {
        padding-top: 2rem;
        padding-bottom: 1rem;
    }

    .logout-btn {
        background-color: #dc3545;
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        width: 80%;
        text-align: center;
    }

        .logout-btn:hover {
            background-color: #c82333;
        }
</style>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private void Logout()
    {
        AuthState.Logout(); 
        DataStore.Clear();  
        NavigationManager.NavigateTo("/", forceLoad: true); 
    }

    protected override void OnInitialized()
    {
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        StateHasChanged();
    }
}